describe('Desafio QA Automation', () => {
    beforeEach(() => {
        cy.visit('https://demoqa.com/')
        cy.intercept('GET', 'https://pagead2.googlesyndication.com/**', { statusCode: 204, body: '' })
        cy.intercept('GET', 'https://serving.stat-rock.com/**', { statusCode: 204, body: '' })
    })

    it('Criar, editar e Deletar um registro no submenu Web Tables', () => {
        cy.get('.card.mt-4.top-card')
            .should('be.visible')
            .contains('Elements')
            .click({ force: true }) //Necessário forçar, já que alguns ADs podem sobrepor o card, onde a automação pode se perder
        cy.contains('span.text', 'Web Table')
            .should('be.visible')
            .click()
        //Adicionando um novo Registro
        cy.get('#addNewRecordButton')
            .should('be.visible')
            .click()
        cy.get('#firstName')
            .should('be.visible')
            .type('Gabriel')
            .should('have.value', 'Gabriel')
        cy.get('#lastName')
            .should('be.visible')
            .type('Recouso')
            .should('have.value', 'Recouso')
        cy.get('#userEmail')
            .should('be.visible')
            .type('gabriel.recouso@gmail.com')
            .should('have.value', 'gabriel.recouso@gmail.com')
        cy.get('#age')
            .should('be.visible')
            .type('30')
            .should('have.value', '30')
        cy.get('#salary')
            .should('be.visible')
            .type('20000')
            .should('have.value', '20000')
        cy.get('#department')
            .should('be.visible')
            .type('Quality Assurance')
            .should('have.value', 'Quality Assurance')
        cy.get('#submit')
            .should('be.visible')
            .click()

        //Editando o registro criado
        cy.contains('.rt-tr', 'Gabriel').within(() => { //limita os próximos cy.get a dentro dessa linha apenas
            cy.get('[id^="edit-record"]').click()
        })
        //editando os dados inseridos anteriormente no formulário
        cy.get('.modal-content').within(() => {
            cy.get('#firstName')
                .should('be.visible')
                .clear()
                .type('Teste')
                .should('have.value', 'Teste')
            cy.get('#lastName')
                .should('be.visible')
                .clear()
                .type('Editado')
                .should('have.value', 'Editado')
            cy.get('#userEmail')
                .should('be.visible')
                .clear()
                .type('teste.editado@gmail.com')
                .should('have.value', 'teste.editado@gmail.com')
            cy.get('#age')
                .should('be.visible')
                .clear()
                .type('99')
                .should('have.value', '99')
            cy.get('#salary')
                .should('be.visible')
                .clear()
                .type('30000')
                .should('have.value', '30000')
            cy.get('#department')
                .should('be.visible')
                .clear()
                .type('QA Automation')
                .should('have.value', 'QA Automation')
            cy.get('#submit')
                .should('be.visible')
                .click()
        })
        //Deletando o registro
        cy.contains('.rt-tr', 'Teste').within(() => {
            cy.get('[id^="delete-record"]')
                .click()
            cy.contains('.rt-tr', 'Teste').should('not.exist')
        })

    })

})